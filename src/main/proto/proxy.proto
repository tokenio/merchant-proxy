syntax = "proto3";
package server.proto;

import "token.proto";
import "alias.proto";
import "transfer.proto";
import "account.proto";
import "member.proto";
import "google/api/annotations.proto";

message GetMemberRequest {
}

message GetMemberResponse {
  string member_id = 1;
  repeated io.token.proto.common.alias.Alias aliases = 2;
}

message GetTokenRequest {
  string token_id = 1;
}

message GetTokenResponse {
  io.token.proto.common.token.Token token = 1;
}

message CreateTransferRequest {
  string token_id = 1;
}

message CreateTransferResponse {
  io.token.proto.common.transfer.Transfer transfer = 1;
}

message StoreTokenRequestRequest {
  double amount = 1;
  string currency = 2;
  string description = 3;
  io.token.proto.common.account.BankAccount destination = 4;
  string callback_url = 5;
}

message StoreTokenRequestResponse {
  string token_request_id = 1;
}

message GenerateTokenRequestUrlRequest {
  string request_id = 1;
  string state = 2;
  string csrf_token = 3;
}

message GenerateTokenRequestUrlResponse {
  string url = 1;
}

message ParseTokenRequestCallbackRequest {
  string url = 1;
}

message ParseTokenRequestCallbackResponse {
  string token_id = 1;
  string state = 2;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// Proxy Service.
//

service ProxyService {
  rpc GetMember (GetMemberRequest) returns (GetMemberResponse) {
    option (google.api.http) = {
        get: "/member"
    };
  }

  rpc GetToken (GetTokenRequest) returns (GetTokenResponse) {
    option (google.api.http) = {
        get: "/tokens/{token_id}"
    };
  }

  rpc CreateTransfer (CreateTransferRequest) returns (CreateTransferResponse) {
    option (google.api.http) = {
          post: "/transfers"
      };
  }

  rpc StoreTokenRequest (StoreTokenRequestRequest) returns (StoreTokenRequestResponse) {
    option (google.api.http) = {
        post: "/token-requests"
    };
  }

  rpc GenerateTokenRequestUrl (GenerateTokenRequestUrlRequest) returns (GenerateTokenRequestUrlResponse) {
    option (google.api.http) = {
        get: "/token-request-url?requestId={request_id}&state={state}&csrfToken={csrf_token}"
    };
  }

  rpc ParseTokenRequestCallback (ParseTokenRequestCallbackRequest) returns (ParseTokenRequestCallbackResponse) {
    option (google.api.http) = {
        get: "/parse-token-request-callback?url={url}"
    };
  }
}
